"""initial migration

Revision ID: 8bc4fffdfa76
Revises: 
Create Date: 2020-08-04 07:54:01.473301

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '8bc4fffdfa76'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('sms_broadcast',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('date_created', sa.DateTime(timezone=True), nullable=True),
    sa.Column('last_modified', sa.DateTime(timezone=True), nullable=True),
    sa.Column('provider_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('is_published', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    schema='sms'
    )
    op.create_table('sms_broadcast_message',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('date_created', sa.DateTime(timezone=True), nullable=True),
    sa.Column('last_modified', sa.DateTime(timezone=True), nullable=True),
    sa.Column('broadcast_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('subject', sa.String(), nullable=False),
    sa.Column('message', sa.String(), nullable=False),
    sa.Column('send_on_day_relative', sa.Integer(), nullable=True),
    sa.Column('send_on_day_absolute', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['broadcast_id'], ['sms.sms_broadcast.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    schema='sms'
    )
    op.create_index(op.f('ix_sms_sms_broadcast_message_broadcast_id'), 'sms_broadcast_message', ['broadcast_id'], unique=False, schema='sms')
    op.create_table('sms_message',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('date_created', sa.DateTime(timezone=True), nullable=True),
    sa.Column('last_modified', sa.DateTime(timezone=True), nullable=True),
    sa.Column('provider_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('broadcast_message_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('farmer_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('phone', sa.String(), nullable=False),
    sa.Column('send_at', sa.DateTime(), nullable=True),
    sa.Column('sent', sa.Boolean(), nullable=False),
    sa.Column('message', sa.String(), nullable=False),
    sa.Column('africastalking_sms_id', sa.String(), nullable=True),
    sa.Column('africastalking_sms_cost', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['broadcast_message_id'], ['sms.sms_broadcast_message.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    schema='sms'
    )
    op.create_index(op.f('ix_sms_sms_message_africastalking_sms_id'), 'sms_message', ['africastalking_sms_id'], unique=True, schema='sms')
    op.create_index(op.f('ix_sms_sms_message_broadcast_message_id'), 'sms_message', ['broadcast_message_id'], unique=False, schema='sms')
    op.create_index(op.f('ix_sms_sms_message_phone'), 'sms_message', ['phone'], unique=False, schema='sms')
    op.create_table('sms_log',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('date_created', sa.DateTime(timezone=True), nullable=True),
    sa.Column('last_modified', sa.DateTime(timezone=True), nullable=True),
    sa.Column('sms_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('network_code', sa.String(), nullable=True),
    sa.Column('failure_reason', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['sms_id'], ['sms.sms_message.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    schema='sms'
    )
    op.create_index(op.f('ix_sms_sms_log_sms_id'), 'sms_log', ['sms_id'], unique=False, schema='sms')
    op.create_table('sms_broadcast_subscription',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('date_created', sa.DateTime(timezone=True), nullable=True),
    sa.Column('last_modified', sa.DateTime(timezone=True), nullable=True),
    sa.Column('broadcast_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('farmer_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('day_zero', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['broadcast_id'], ['sms.sms_broadcast.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    schema='sms'
    )
    op.create_index(op.f('ix_sms_broadcast_subscription_broadcast_id'), 'sms_broadcast_subscription', ['broadcast_id'], unique=False, schema='sms')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_sms_sms_log_sms_id'), table_name='sms_log', schema='sms')
    op.drop_table('sms_log', schema='sms')
    op.drop_index(op.f('ix_sms_sms_message_phone'), table_name='sms_message', schema='sms')
    op.drop_index(op.f('ix_sms_sms_message_broadcast_message_id'), table_name='sms_message', schema='sms')
    op.drop_index(op.f('ix_sms_sms_message_africastalking_sms_id'), table_name='sms_message', schema='sms')
    op.drop_table('sms_message', schema='sms')
    op.drop_index(op.f('ix_sms_day_zero_broadcast_message_id'), table_name='day_zero', schema='sms')
    op.drop_index(op.f('ix_sms_sms_broadcast_message_broadcast_id'), table_name='sms_broadcast_message', schema='sms')
    op.drop_table('sms_broadcast_message', schema='sms')
    op.drop_table('sms_broadcast', schema='sms')
    op.drop_index(op.f('ix_sms_broadcast_subscription_broadcast_id'), table_name='sms_broadcast_subscription', schema='sms')
    op.drop_table('sms_broadcast_subscription', schema='sms')
    # ### end Alembic commands ###
