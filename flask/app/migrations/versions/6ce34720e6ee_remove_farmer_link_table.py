"""remove farmer link table

Revision ID: 6ce34720e6ee
Revises: 7b298cf5d220
Create Date: 2020-08-14 07:28:12.854057

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '6ce34720e6ee'
down_revision = '7b298cf5d220'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_sms_sms_farmer_link_sms_message_id', table_name='sms_farmer_link', schema='sms')
    op.drop_table('sms_farmer_link', schema='sms')
    op.add_column('sms_broadcast', sa.Column('relative_send_dates', sa.Boolean(), nullable=True), schema='sms')
    op.add_column('sms_log', sa.Column('at_failure_reason', sa.String(), nullable=True), schema='sms')
    op.add_column('sms_log', sa.Column('at_status_code', sa.String(), nullable=False), schema='sms')
    op.add_column('sms_log', sa.Column('timestamp', sa.DateTime(), nullable=True), schema='sms')
    op.drop_column('sms_log', 'network_code', schema='sms')
    op.drop_column('sms_log', 'status', schema='sms')
    op.drop_column('sms_log', 'failure_reason', schema='sms')
    op.add_column('sms_message', sa.Column('at_sms_cost', sa.String(), nullable=True), schema='sms')
    op.add_column('sms_message', sa.Column('at_sms_id', sa.String(), nullable=True), schema='sms')
    op.create_index(op.f('ix_sms_sms_message_at_sms_id'), 'sms_message', ['at_sms_id'], unique=True, schema='sms')
    op.drop_index('ix_sms_sms_message_africastalking_sms_id', table_name='sms_message', schema='sms')
    op.drop_column('sms_message', 'africastalking_sms_cost', schema='sms')
    op.drop_column('sms_message', 'africastalking_sms_id', schema='sms')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('sms_message', sa.Column('africastalking_sms_id', sa.VARCHAR(), autoincrement=False, nullable=True), schema='sms')
    op.add_column('sms_message', sa.Column('africastalking_sms_cost', sa.VARCHAR(), autoincrement=False, nullable=True), schema='sms')
    op.create_index('ix_sms_sms_message_africastalking_sms_id', 'sms_message', ['africastalking_sms_id'], unique=True, schema='sms')
    op.drop_index(op.f('ix_sms_sms_message_at_sms_id'), table_name='sms_message', schema='sms')
    op.drop_column('sms_message', 'at_sms_id', schema='sms')
    op.drop_column('sms_message', 'at_sms_cost', schema='sms')
    op.add_column('sms_log', sa.Column('failure_reason', sa.VARCHAR(), autoincrement=False, nullable=True), schema='sms')
    op.add_column('sms_log', sa.Column('status', sa.VARCHAR(), autoincrement=False, nullable=False), schema='sms')
    op.add_column('sms_log', sa.Column('network_code', sa.VARCHAR(), autoincrement=False, nullable=True), schema='sms')
    op.drop_column('sms_log', 'timestamp', schema='sms')
    op.drop_column('sms_log', 'at_status_code', schema='sms')
    op.drop_column('sms_log', 'at_failure_reason', schema='sms')
    op.drop_column('sms_broadcast', 'relative_send_dates', schema='sms')
    op.create_table('sms_farmer_link',
    sa.Column('id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('date_created', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('last_modified', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('sms_message_id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('farmer_id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['sms_message_id'], ['sms.sms_message.id'], name='sms_farmer_link_sms_message_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='sms_farmer_link_pkey'),
    schema='sms'
    )
    op.create_index('ix_sms_sms_farmer_link_sms_message_id', 'sms_farmer_link', ['sms_message_id'], unique=False, schema='sms')
    # ### end Alembic commands ###
